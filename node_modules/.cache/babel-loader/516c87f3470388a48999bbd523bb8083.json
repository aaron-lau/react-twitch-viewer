{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaron.lau/dev/react-twitch-viewer/src/components/GameStreams.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\n\nfunction GameStreams(_ref) {\n  var _this = this;\n\n  var match = _ref.match,\n      location = _ref.location;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      streamData = _useState2[0],\n      setStreamData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewers = _useState4[0],\n      setViewers = _useState4[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result, dataArray, finalArray, totalViewers;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get(\"https://api.twitch.tv/helix/streams?game_id=\".concat(location.state.gameID));\n\n              case 2:\n                result = _context.sent;\n                dataArray = result.data.data;\n                finalArray = dataArray.map(function (stream) {\n                  var newURL = stream.thumbnail_url.replace(\"{width}\", \"300\").replace(\"{height}\", \"300\");\n                  stream.thumbnail_url = newURL;\n                  return stream;\n                });\n                totalViewers = finalArray.reduce(function (acc, val) {\n                  return acc + val.viewer_count;\n                }, 0);\n                setViewers(totalViewers);\n                setStreamData(finalArray);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, match.params.id, \" Streams\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, viewers), \" people currently watch \", match.params.id), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, streamData.map(function (stream) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-6 col-sm-12 mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: stream.thumbnail_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, stream.user_name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, stream.viewer_count, \" live viewers\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link\",\n      href: \"https://twitch.tv/\" + stream.user_name,\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, \"watch \", stream.user_name, \"'s channel\")))));\n  })));\n}\n\nexport default GameStreams;","map":{"version":3,"sources":["/Users/aaron.lau/dev/react-twitch-viewer/src/components/GameStreams.js"],"names":["React","useState","useEffect","api","GameStreams","match","location","streamData","setStreamData","viewers","setViewers","fetchData","get","state","gameID","result","dataArray","data","finalArray","map","stream","newURL","thumbnail_url","replace","totalViewers","reduce","acc","val","viewer_count","params","id","user_name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport api from \"../api\";\nfunction GameStreams({ match, location }) {\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\n      );\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1 className=\"text-center\">{match.params.id} Streams</h1>\n      <h3 className=\"text-center\">\n        <strong className=\"text-primary\">{viewers}</strong> people currently\n        watch {match.params.id}\n      </h3>\n      <div className=\"row\">\n        {streamData.map(stream => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={stream.thumbnail_url} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{stream.user_name}</h5>\n                <div className=\"card-text\">\n                  {stream.viewer_count} live viewers\n                </div>\n                <button className=\"btn btn-success\">\n                  <a\n                    className=\"link\"\n                    href={\"https://twitch.tv/\" + stream.user_name}\n                    target=\"_blank\"\n                  >\n                    watch {stream.user_name}'s channel\n                  </a>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameStreams;\n"]},"metadata":{},"sourceType":"module"}