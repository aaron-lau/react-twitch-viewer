{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaron.lau/dev/react-twitch-viewer/src/components/Streams.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\n\nfunction Streams() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      channels = _useState2[0],\n      setChannels = _useState2[1];\n\n  useEffect(function () {\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result, dataArray, gameIDs, baseURL, queryParams, finalURL, gameNames, gameNameArray, finalArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get(\"https://api.twitch.tv/helix/streams\");\n\n              case 2:\n                result = _context.sent;\n                dataArray = result.data.data;\n                gameIDs = dataArray.map(function (streams) {\n                  return streams.game_id;\n                });\n                baseURL = \"https://api.twitch.tv/helix/games?\";\n                queryParams = \"\";\n                gameIDs.map(function (id) {\n                  return queryParams = queryParams + \"id=?\".concat(id, \"&\");\n                });\n                finalURL = baseURL + queryParams;\n                _context.next = 11;\n                return api.get(finalURL);\n\n              case 11:\n                gameNames = _context.sent;\n                gameNameArray = gameNames.data.data;\n                finalArray = dataArray.map(function (stream) {\n                  stream.gameName = \"\";\n                  gameNameArray.map(function (name) {\n                    if (stream.game_id === name.id) {\n                      return stream.gameName = name.name;\n                    }\n                  });\n                  var newURL = stream.thumbnail_url.replace(\"{width}\", \"300\").replace(\"{height}\", \"300\");\n                  stream.thumbnail_url = newURL;\n                  return stream;\n                });\n                setChannels(finalArray);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Most Popular Live Streams\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, channels.map(function (channel) {\n    return React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-6 col-sm-12 mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: channel.thumbnail_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, channel.user_name), React.createElement(\"h5\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, channel.gameName), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, channel.viewer_count, \" live viewers\"), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://twitch.tv/\" + channel.user_name,\n      className: \"link\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"watch \", channel.user_name, \"'s' stream\")))));\n  })));\n}\n\nexport default Streams;","map":{"version":3,"sources":["/Users/aaron.lau/dev/react-twitch-viewer/src/components/Streams.js"],"names":["React","useState","useEffect","api","Streams","channels","setChannels","fetchData","get","result","dataArray","data","gameIDs","map","streams","game_id","baseURL","queryParams","id","finalURL","gameNames","gameNameArray","finalArray","stream","gameName","name","newURL","thumbnail_url","replace","channel","user_name","viewer_count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\nfunction Streams() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(streams => {\n        return streams.game_id;\n      });\n\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=?${id}&`);\n      });\n\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1>Most Popular Live Streams</h1>\n      <div className=\"row\">\n        {channels.map(channel => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={channel.thumbnail_url} />\n              <div className=\"card-body\">\n                <h3 className=\"card-title\">{channel.user_name}</h3>\n                <h5 className=\"card-text\">{channel.gameName}</h5>\n                <div className=\"card-text\">\n                  {channel.viewer_count} live viewers\n                </div>\n                <button className=\"btn btn-success\">\n                  <a\n                    href={\"https://twitch.tv/\" + channel.user_name}\n                    className=\"link\"\n                    target=\"_blank\"\n                  >\n                    watch {channel.user_name}'s' stream\n                  </a>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Streams;\n"]},"metadata":{},"sourceType":"module"}