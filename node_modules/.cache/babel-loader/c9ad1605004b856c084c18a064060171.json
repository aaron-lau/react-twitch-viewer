{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/aaron.lau/dev/react-twitch-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaron.lau/dev/react-twitch-viewer/src/components/Games.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\n\nfunction Games() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      games = _useState2[0],\n      setGames = _useState2[1];\n\n  useEffect(function () {\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result, dataArray, finalArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get(\"https://api.twitch.tv/helix/games/top\");\n\n              case 2:\n                result = _context.sent;\n                // console.log(result.data);\n                dataArray = result.data.data;\n                finalArray = dataArray.map(function (game) {\n                  var newURL = game.box_art_url.replace(\"{width}\", \"300\").replace(\"{height}\", \"300\");\n                  game.box_art_url = newURL;\n                  return game;\n                });\n                setGames(finalArray);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Most Popular Games\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, games.map(function (game) {\n    return React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-6 col-sm-12 mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: game.box_art_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, game.name), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"link\",\n      to: {\n        pathname: \"game/\" + game.name,\n        state: {\n          gameID: game.id\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, game.name, \" streams\", \" \")))));\n  })));\n}\n\nexport default Games;","map":{"version":3,"sources":["/Users/aaron.lau/dev/react-twitch-viewer/src/components/Games.js"],"names":["React","useState","useEffect","Link","api","Games","games","setGames","fetchData","get","result","dataArray","data","finalArray","map","game","newURL","box_art_url","replace","name","pathname","state","gameID","id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,SAASC,KAAT,GAAiB;AAAA,kBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACRK,KADQ;AAAA,MACDC,QADC;;AAEfL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACKJ,GAAG,CAACK,GAAJ,CAAQ,uCAAR,CADL;;AAAA;AACVC,gBAAAA,MADU;AAEhB;AACIC,gBAAAA,SAHY,GAGAD,MAAM,CAACE,IAAP,CAAYA,IAHZ;AAIZC,gBAAAA,UAJY,GAICF,SAAS,CAACG,GAAV,CAAc,UAAAC,IAAI,EAAI;AACrC,sBAAIC,MAAM,GAAGD,IAAI,CAACE,WAAL,CACVC,OADU,CACF,SADE,EACS,KADT,EAEVA,OAFU,CAEF,UAFE,EAEU,KAFV,CAAb;AAGAH,kBAAAA,IAAI,CAACE,WAAL,GAAmBD,MAAnB;AACA,yBAAOD,IAAP;AACD,iBANgB,CAJD;AAWhBR,gBAAAA,QAAQ,CAACM,UAAD,CAAR;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATL,SAAS;AAAA;AAAA;AAAA,OAAf;;AAaAA,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEA,IAAI,CAACE,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,IAAI,CAACI,IAAjC,CADF,EAEE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,UAAUL,IAAI,CAACI,IADvB;AAEFE,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAEP,IAAI,CAACQ;AADR;AAFL,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGR,IAAI,CAACI,IATR,cASsB,GATtB,CADF,CAFF,CAFF,CADF,CADa;AAAA,GAAd,CADH,CAFF,CADF;AA8BD;;AAED,eAAed,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\n\nfunction Games() {\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top\");\n      // console.log(result.data);\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(game => {\n        let newURL = game.box_art_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        game.box_art_url = newURL;\n        return game;\n      });\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1>Most Popular Games</h1>\n      <div className=\"row\">\n        {games.map(game => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={game.box_art_url} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{game.name}</h5>\n                <button className=\"btn btn-success\">\n                  <Link\n                    className=\"link\"\n                    to={{\n                      pathname: \"game/\" + game.name,\n                      state: {\n                        gameID: game.id\n                      }\n                    }}\n                  >\n                    {game.name} streams{\" \"}\n                  </Link>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Games;\n"]},"metadata":{},"sourceType":"module"}