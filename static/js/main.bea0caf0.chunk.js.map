{"version":3,"sources":["api.js","components/Games.js","components/Header.js","components/Streams.js","components/GameStreams.js","index.js"],"names":["api","axios","create","headers","Games","useState","games","setGames","useEffect","a","get","result","dataArray","data","finalArray","map","game","newURL","box_art_url","replace","fetchData","className","src","name","to","pathname","state","gameID","id","Header","Streams","channels","setChannels","gameIDs","streams","game_id","queryParams","finalURL","gameNames","gameNameArray","stream","gameName","thumbnail_url","channel","user_name","viewer_count","href","target","GameStreams","match","location","streamData","setStreamData","viewers","setViewers","totalViewers","reduce","acc","val","params","rootElement","document","getElementById","ReactDOM","render","exact","path","component"],"mappings":"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","file":"static/js/main.bea0caf0.chunk.js","sourcesContent":["import axios from \"axios\";\nlet api = axios.create({\n  headers: {\n    \"Client-ID\": \"60mzgsx8unzk1jj4ksvtp2gazjct1o\"\n  }\n});\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\n\nfunction Games() {\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top\");\n      // console.log(result.data);\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(game => {\n        let newURL = game.box_art_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        game.box_art_url = newURL;\n        return game;\n      });\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1>Most Popular Games</h1>\n      <div className=\"row\">\n        {games.map(game => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={game.box_art_url} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{game.name}</h5>\n                <button className=\"btn btn-success\">\n                  <Link\n                    className=\"link\"\n                    to={{\n                      pathname: \"game/\" + game.name,\n                      state: {\n                        gameID: game.id\n                      }\n                    }}\n                  >\n                    {game.name} streams{\" \"}\n                  </Link>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Games;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar justify-content-center\">\n      <li className=\"nav-item nav-link\">\n        <Link to=\"/\">Top Games</Link>\n      </li>\n      <li className=\"nav-item nav-link\">\n        <Link to=\"/top-streams\">Top Live Streams</Link>\n      </li>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\nfunction Streams() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(streams => {\n        return streams.game_id;\n      });\n\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=?${id}&`);\n      });\n\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1>Most Popular Live Streams</h1>\n      <div className=\"row\">\n        {channels.map(channel => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={channel.thumbnail_url} />\n              <div className=\"card-body\">\n                <h3 className=\"card-title\">{channel.user_name}</h3>\n                <h5 className=\"card-text\">{channel.gameName}</h5>\n                <div className=\"card-text\">\n                  {channel.viewer_count} live viewers\n                </div>\n                <button className=\"btn btn-success\">\n                  <a\n                    href={\"https://twitch.tv/\" + channel.user_name}\n                    className=\"link\"\n                    target=\"_blank\"\n                  >\n                    watch {channel.user_name}'s' stream\n                  </a>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Streams;\n","import React, { useState, useEffect } from \"react\";\n\nimport api from \"../api\";\nfunction GameStreams({ match, location }) {\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\n      );\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1 className=\"text-center\">{match.params.id} Streams</h1>\n      <h3 className=\"text-center\">\n        <strong className=\"text-primary\">{viewers}</strong> people currently\n        watch {match.params.id}\n      </h3>\n      <div className=\"row\">\n        {streamData.map(stream => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={stream.thumbnail_url} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{stream.user_name}</h5>\n                <div className=\"card-text\">\n                  {stream.viewer_count} live viewers\n                </div>\n                <button className=\"btn btn-success\">\n                  <a\n                    className=\"link\"\n                    href={\"https://twitch.tv/\" + stream.user_name}\n                    target=\"_blank\"\n                  >\n                    watch {stream.user_name}'s channel\n                  </a>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameStreams;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Games from \"./components/Games\";\nimport Header from \"./components/Header\";\nimport Streams from \"./components/Streams\";\nimport GameStreams from \"./components/GameStreams\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App container-fluid\">\n        <Header />\n        <Route exact path=\"/\" component={Games} />\n        <Route exact path=\"/top-streams\" component={Streams} />\n        <Route exact path=\"/game/:id\" component={GameStreams} />\n      </div>\n    </Router>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}