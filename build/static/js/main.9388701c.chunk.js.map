{"version":3,"sources":["api.js","components/Games.js","components/Header.js","components/Streams.js","components/GameStreams.js","index.js"],"names":["api","axios","create","headers","Client-ID","Games","_useState","useState","_useState2","Object","slicedToArray","games","setGames","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","dataArray","finalArray","wrap","_context","prev","next","get","sent","data","map","game","newURL","box_art_url","replace","stop","apply","this","arguments","fetchData","react_default","createElement","className","src","name","react_router_dom","to","pathname","state","gameID","id","Header","Streams","channels","setChannels","gameIDs","queryParams","finalURL","gameNames","gameNameArray","streams","game_id","concat","stream","gameName","thumbnail_url","channel","user_name","viewer_count","href","target","GameStreams","match","location","streamData","setStreamData","_useState3","_useState4","viewers","setViewers","_ref2","totalViewers","reduce","acc","val","params","rootElement","document","getElementById","ReactDOM","render","components_Header","react_router","exact","path","component"],"mappings":"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","file":"static/js/main.9388701c.chunk.js","sourcesContent":["import axios from \"axios\";\nlet api = axios.create({\n  headers: {\n    \"Client-ID\": \"60mzgsx8unzk1jj4ksvtp2gazjct1o\"\n  }\n});\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\n\nfunction Games() {\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top\");\n      // console.log(result.data);\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(game => {\n        let newURL = game.box_art_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        game.box_art_url = newURL;\n        return game;\n      });\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1>Most Popular Games</h1>\n      <div className=\"row\">\n        {games.map(game => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={game.box_art_url} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{game.name}</h5>\n                <button className=\"btn btn-success\">\n                  <Link\n                    className=\"link\"\n                    to={{\n                      pathname: \"game/\" + game.name,\n                      state: {\n                        gameID: game.id\n                      }\n                    }}\n                  >\n                    {game.name} streams{\" \"}\n                  </Link>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Games;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar justify-content-center\">\n      <li className=\"nav-item nav-link\">\n        <Link to=\"/\">Top Games</Link>\n      </li>\n      <li className=\"nav-item nav-link\">\n        <Link to=\"/top-streams\">Top Live Streams</Link>\n      </li>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\nfunction Streams() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(streams => {\n        return streams.game_id;\n      });\n\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=?${id}&`);\n      });\n\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1>Most Popular Live Streams</h1>\n      <div className=\"row\">\n        {channels.map(channel => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={channel.thumbnail_url} />\n              <div className=\"card-body\">\n                <h3 className=\"card-title\">{channel.user_name}</h3>\n                <h5 className=\"card-text\">{channel.gameName}</h5>\n                <div className=\"card-text\">\n                  {channel.viewer_count} live viewers\n                </div>\n                <button className=\"btn btn-success\">\n                  <a\n                    href={\"https://twitch.tv/\" + channel.user_name}\n                    className=\"link\"\n                    target=\"_blank\"\n                  >\n                    watch {channel.user_name}'s' stream\n                  </a>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Streams;\n","import React, { useState, useEffect } from \"react\";\n\nimport api from \"../api\";\nfunction GameStreams({ match, location }) {\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\n      );\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"300\")\n          .replace(\"{height}\", \"300\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1 className=\"text-center\">{match.params.id} Streams</h1>\n      <h3 className=\"text-center\">\n        <strong className=\"text-primary\">{viewers}</strong> people currently\n        watch {match.params.id}\n      </h3>\n      <div className=\"row\">\n        {streamData.map(stream => (\n          <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <img className=\"card-img-top\" src={stream.thumbnail_url} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{stream.user_name}</h5>\n                <div className=\"card-text\">\n                  {stream.viewer_count} live viewers\n                </div>\n                <button className=\"btn btn-success\">\n                  <a\n                    className=\"link\"\n                    href={\"https://twitch.tv/\" + stream.user_name}\n                    target=\"_blank\"\n                  >\n                    watch {stream.user_name}'s channel\n                  </a>\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameStreams;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Games from \"./components/Games\";\nimport Header from \"./components/Header\";\nimport Streams from \"./components/Streams\";\nimport GameStreams from \"./components/GameStreams\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App container-fluid\">\n        <Header />\n        <Route exact path=\"/\" component={Games} />\n        <Route exact path=\"/top-streams\" component={Streams} />\n        <Route exact path=\"/game/:id\" component={GameStreams} />\n      </div>\n    </Router>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}